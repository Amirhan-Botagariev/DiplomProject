services:
  pg:
    build:
      context: ./sys/postgres
    container_name: pg
    environment:
      POSTGRES_DB: platform
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: pwd
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: always
    networks:
      - platform

  maildev:
    image: maildev/maildev
    container_name: mail_developer
    environment:
      - TZ=Asia/Astana
      - MAILDEV_WEB_PORT=1080
      - MAILDEV_SMTP_PORT=1025
    ports:
      - "8081:1080"
      - "1025:1025"
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
    restart: unless-stopped
    networks:
      - platform

  adminer:
    image: adminer
    container_name: adminer
    depends_on:
      - pg
    ports:
      - "8082:8080"
    restart: unless-stopped
    networks:
      - platform

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - pg
    restart: unless-stopped
    networks:
      - platform

  platform:
    build:
      context: .
      dockerfile: sys/gunicorn/Dockerfile
    container_name: app
    depends_on:
      - pg
    volumes:
      - .:/platform
    working_dir: /platform/platform_backend
    command: ["/bin/sh", "-c", "poetry run alembic -c alembic.ini upgrade head && poetry run python run_main.py"]
    environment:
      - DATABASE_URL=postgresql://admin:pwd@pg:5432/platform_backend
    ports:
      - "8000:8000"
    restart: on-failure
    networks:
      - platform
  frontend:
    build:
      context: .
      dockerfile: sys/frontend/Dockerfile
    container_name: frontend
    ports:
      - "5173:80"
    depends_on:
      - platform
    networks:
      - platform

volumes:
  pg_data:

networks:
  platform:
    driver: bridge