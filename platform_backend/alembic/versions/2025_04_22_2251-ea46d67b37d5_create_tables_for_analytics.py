"""Create tables for analytics

Revision ID: ea46d67b37d5
Revises: db84b553dcd5
Create Date: 2025-04-22 22:51:01.305686

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "ea46d67b37d5"
down_revision: Union[str, None] = "db84b553dcd5"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "attrition_predictions",
        sa.Column("employee_number", sa.Integer(), nullable=False),
        sa.Column(
            "predicted_attrition_prob",
            sa.DECIMAL(precision=5, scale=4),
            nullable=False,
        ),
        sa.Column("predicted_at", sa.TIMESTAMP(), nullable=False),
        sa.PrimaryKeyConstraint(
            "employee_number", name=op.f("pk_attrition_predictions")
        ),
    )
    op.create_table(
        "business_travel",
        sa.Column("business_travel_id", sa.Integer(), nullable=False),
        sa.Column("travel_type", sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint(
            "business_travel_id", name=op.f("pk_business_travel")
        ),
        sa.UniqueConstraint(
            "travel_type", name=op.f("uq_business_travel_travel_type")
        ),
    )
    op.create_index(
        op.f("ix_business_travel_business_travel_id"),
        "business_travel",
        ["business_travel_id"],
        unique=False,
    )
    op.create_table(
        "departments",
        sa.Column("department_id", sa.Integer(), nullable=False),
        sa.Column("department_name", sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint("department_id", name=op.f("pk_departments")),
    )
    op.create_index(
        op.f("ix_departments_department_id"),
        "departments",
        ["department_id"],
        unique=False,
    )
    op.create_table(
        "education_fields",
        sa.Column("education_field_id", sa.Integer(), nullable=False),
        sa.Column(
            "education_field_name", sa.String(length=50), nullable=False
        ),
        sa.PrimaryKeyConstraint(
            "education_field_id", name=op.f("pk_education_fields")
        ),
        sa.UniqueConstraint(
            "education_field_name",
            name=op.f("uq_education_fields_education_field_name"),
        ),
    )
    op.create_index(
        op.f("ix_education_fields_education_field_id"),
        "education_fields",
        ["education_field_id"],
        unique=False,
    )
    op.create_table(
        "genders",
        sa.Column("gender_id", sa.Integer(), nullable=False),
        sa.Column("gender_name", sa.String(length=10), nullable=False),
        sa.PrimaryKeyConstraint("gender_id", name=op.f("pk_genders")),
        sa.UniqueConstraint(
            "gender_name", name=op.f("uq_genders_gender_name")
        ),
    )
    op.create_index(
        op.f("ix_genders_gender_id"), "genders", ["gender_id"], unique=False
    )
    op.create_table(
        "job_roles",
        sa.Column("job_role_id", sa.Integer(), nullable=False),
        sa.Column("job_role_name", sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint("job_role_id", name=op.f("pk_job_roles")),
        sa.UniqueConstraint(
            "job_role_name", name=op.f("uq_job_roles_job_role_name")
        ),
    )
    op.create_index(
        op.f("ix_job_roles_job_role_id"),
        "job_roles",
        ["job_role_id"],
        unique=False,
    )
    op.create_table(
        "marital_statuses",
        sa.Column("marital_status_id", sa.Integer(), nullable=False),
        sa.Column("marital_status_name", sa.String(length=15), nullable=False),
        sa.PrimaryKeyConstraint(
            "marital_status_id", name=op.f("pk_marital_statuses")
        ),
        sa.UniqueConstraint(
            "marital_status_name",
            name=op.f("uq_marital_statuses_marital_status_name"),
        ),
    )
    op.create_index(
        op.f("ix_marital_statuses_marital_status_id"),
        "marital_statuses",
        ["marital_status_id"],
        unique=False,
    )
    op.create_table(
        "employees",
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("employee_number", sa.Integer(), nullable=False),
        sa.Column("age", sa.Integer(), nullable=False),
        sa.Column("gender_id", sa.Integer(), nullable=True),
        sa.Column("marital_status_id", sa.Integer(), nullable=True),
        sa.Column("education_level", sa.Integer(), nullable=False),
        sa.Column("education_field_id", sa.Integer(), nullable=True),
        sa.Column("department_id", sa.Integer(), nullable=True),
        sa.Column("job_role_id", sa.Integer(), nullable=True),
        sa.Column("job_level", sa.Integer(), nullable=False),
        sa.Column("attrition", sa.Boolean(), nullable=False),
        sa.Column("business_travel_id", sa.Integer(), nullable=True),
        sa.Column("num_companies_worked", sa.Integer(), nullable=False),
        sa.Column("total_working_years", sa.Integer(), nullable=False),
        sa.Column("years_at_company", sa.Integer(), nullable=False),
        sa.Column("years_in_current_role", sa.Integer(), nullable=False),
        sa.Column("years_since_last_promotion", sa.Integer(), nullable=False),
        sa.Column("years_with_curr_manager", sa.Integer(), nullable=False),
        sa.Column("work_life_balance", sa.Integer(), nullable=False),
        sa.Column("training_times_last_year", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["business_travel_id"],
            ["business_travel.business_travel_id"],
            name=op.f("fk_employees_business_travel_id_business_travel"),
        ),
        sa.ForeignKeyConstraint(
            ["department_id"],
            ["departments.department_id"],
            name=op.f("fk_employees_department_id_departments"),
        ),
        sa.ForeignKeyConstraint(
            ["education_field_id"],
            ["education_fields.education_field_id"],
            name=op.f("fk_employees_education_field_id_education_fields"),
        ),
        sa.ForeignKeyConstraint(
            ["gender_id"],
            ["genders.gender_id"],
            name=op.f("fk_employees_gender_id_genders"),
        ),
        sa.ForeignKeyConstraint(
            ["job_role_id"],
            ["job_roles.job_role_id"],
            name=op.f("fk_employees_job_role_id_job_roles"),
        ),
        sa.ForeignKeyConstraint(
            ["marital_status_id"],
            ["marital_statuses.marital_status_id"],
            name=op.f("fk_employees_marital_status_id_marital_statuses"),
        ),
        sa.PrimaryKeyConstraint("employee_id", name=op.f("pk_employees")),
        sa.UniqueConstraint(
            "employee_number", name=op.f("uq_employees_employee_number")
        ),
    )
    op.create_index(
        op.f("ix_employees_business_travel_id"),
        "employees",
        ["business_travel_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_employees_department_id"),
        "employees",
        ["department_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_employees_education_field_id"),
        "employees",
        ["education_field_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_employees_employee_id"),
        "employees",
        ["employee_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_employees_gender_id"),
        "employees",
        ["gender_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_employees_job_role_id"),
        "employees",
        ["job_role_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_employees_marital_status_id"),
        "employees",
        ["marital_status_id"],
        unique=False,
    )
    op.create_table(
        "performance_reviews",
        sa.Column("review_id", sa.Integer(), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("review_date", sa.Date(), nullable=False),
        sa.Column("performance_rating", sa.Integer(), nullable=False),
        sa.Column("job_involvement", sa.Integer(), nullable=False),
        sa.Column("job_satisfaction", sa.Integer(), nullable=False),
        sa.Column("relationship_satisfaction", sa.Integer(), nullable=False),
        sa.Column("environment_satisfaction", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employees.employee_id"],
            name=op.f("fk_performance_reviews_employee_id_employees"),
        ),
        sa.PrimaryKeyConstraint(
            "review_id", name=op.f("pk_performance_reviews")
        ),
    )
    op.create_index(
        op.f("ix_performance_reviews_review_id"),
        "performance_reviews",
        ["review_id"],
        unique=False,
    )
    op.create_table(
        "salaries",
        sa.Column("salary_id", sa.Integer(), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column(
            "monthly_income", sa.DECIMAL(precision=10, scale=2), nullable=False
        ),
        sa.Column(
            "hourly_rate", sa.DECIMAL(precision=10, scale=2), nullable=False
        ),
        sa.Column("percent_salary_hike", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employees.employee_id"],
            name=op.f("fk_salaries_employee_id_employees"),
        ),
        sa.PrimaryKeyConstraint("salary_id", name=op.f("pk_salaries")),
    )
    op.create_index(
        op.f("ix_salaries_salary_id"), "salaries", ["salary_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_salaries_salary_id"), table_name="salaries")
    op.drop_table("salaries")
    op.drop_index(
        op.f("ix_performance_reviews_review_id"),
        table_name="performance_reviews",
    )
    op.drop_table("performance_reviews")
    op.drop_index(
        op.f("ix_employees_marital_status_id"), table_name="employees"
    )
    op.drop_index(op.f("ix_employees_job_role_id"), table_name="employees")
    op.drop_index(op.f("ix_employees_gender_id"), table_name="employees")
    op.drop_index(op.f("ix_employees_employee_id"), table_name="employees")
    op.drop_index(
        op.f("ix_employees_education_field_id"), table_name="employees"
    )
    op.drop_index(op.f("ix_employees_department_id"), table_name="employees")
    op.drop_index(
        op.f("ix_employees_business_travel_id"), table_name="employees"
    )
    op.drop_table("employees")
    op.drop_index(
        op.f("ix_marital_statuses_marital_status_id"),
        table_name="marital_statuses",
    )
    op.drop_table("marital_statuses")
    op.drop_index(op.f("ix_job_roles_job_role_id"), table_name="job_roles")
    op.drop_table("job_roles")
    op.drop_index(op.f("ix_genders_gender_id"), table_name="genders")
    op.drop_table("genders")
    op.drop_index(
        op.f("ix_education_fields_education_field_id"),
        table_name="education_fields",
    )
    op.drop_table("education_fields")
    op.drop_index(
        op.f("ix_departments_department_id"), table_name="departments"
    )
    op.drop_table("departments")
    op.drop_index(
        op.f("ix_business_travel_business_travel_id"),
        table_name="business_travel",
    )
    op.drop_table("business_travel")
    op.drop_table("attrition_predictions")
    # ### end Alembic commands ###
